{"abi":[{"type":"function","name":"createPair","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getAllPairs","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getPair","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"PairCreated","inputs":[{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"},{"name":"pair","type":"address","indexed":false,"internalType":"address"},{"name":"","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"PairAlreadyExists","inputs":[]},{"type":"error","name":"TokensCannotBeTheSame","inputs":[]},{"type":"error","name":"TokensCannotBeZeroAddress","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createPair(address,address)":"c9c65396","getAllPairs()":"f800ece9","getPair(address,address)":"e6a43905"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PairAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensCannotBeTheSame\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensCannotBeZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPairs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xBlank\",\"events\":{\"PairCreated(address,address,address,uint256)\":{\"params\":{\"pair\":\"The address of the pair\",\"token0\":\"The first token of the pair\",\"token1\":\"The second token of the pair\"}}},\"kind\":\"dev\",\"methods\":{\"createPair(address,address)\":{\"params\":{\"tokenA\":\"The first token\",\"tokenB\":\"The second token\"},\"returns\":{\"_0\":\"The address of the new pair\"}},\"getAllPairs()\":{\"returns\":{\"_0\":\"All pairs\"}},\"getPair(address,address)\":{\"details\":\"If the pair does not exist or invalid tokens, it will return the zero address\",\"params\":{\"tokenA\":\"The first token\",\"tokenB\":\"The second token\"},\"returns\":{\"_0\":\"The pair address\"}}},\"title\":\"SwapSwopFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"PairAlreadyExists()\":[{\"notice\":\"Thrown when a pair already exists\"}],\"TokensCannotBeTheSame()\":[{\"notice\":\"Thrown when a tokens are the same\"}],\"TokensCannotBeZeroAddress()\":[{\"notice\":\"Thrown when a token is the zero address\"}]},\"events\":{\"PairCreated(address,address,address,uint256)\":{\"notice\":\"Emitted when a new pair is created\"}},\"kind\":\"user\",\"methods\":{\"createPair(address,address)\":{\"notice\":\"Creates a new pair\"},\"getAllPairs()\":{\"notice\":\"Returns all pairs\"},\"getPair(address,address)\":{\"notice\":\"Returns the pair address for two tokens\"}},\"notice\":\"This contract is used to create and manage SwapSwop pairs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISwapSwopFactory.sol\":\"ISwapSwopFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/ISwapSwopFactory.sol\":{\"keccak256\":\"0x00c05df2c45fdb30168df151051fb14f5699b2ee026bce88f8130a99872d3792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fef1c2c8129ff1ba0677ca096a8a389f22cff9307abdee58dbed6e7392b7646\",\"dweb:/ipfs/QmQptfpxPVxJLnX1GdtmmP97EJEpp4TytUzaPRjC197RRA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"PairAlreadyExists"},{"inputs":[],"type":"error","name":"TokensCannotBeTheSame"},{"inputs":[],"type":"error","name":"TokensCannotBeZeroAddress"},{"inputs":[{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true},{"internalType":"address","name":"pair","type":"address","indexed":false},{"internalType":"uint256","name":"","type":"uint256","indexed":false}],"type":"event","name":"PairCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createPair","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllPairs","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"view","type":"function","name":"getPair","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createPair(address,address)":{"params":{"tokenA":"The first token","tokenB":"The second token"},"returns":{"_0":"The address of the new pair"}},"getAllPairs()":{"returns":{"_0":"All pairs"}},"getPair(address,address)":{"details":"If the pair does not exist or invalid tokens, it will return the zero address","params":{"tokenA":"The first token","tokenB":"The second token"},"returns":{"_0":"The pair address"}}},"version":1},"userdoc":{"kind":"user","methods":{"createPair(address,address)":{"notice":"Creates a new pair"},"getAllPairs()":{"notice":"Returns all pairs"},"getPair(address,address)":{"notice":"Returns the pair address for two tokens"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISwapSwopFactory.sol":"ISwapSwopFactory"},"evmVersion":"cancun","libraries":{}},"sources":{"src/interfaces/ISwapSwopFactory.sol":{"keccak256":"0x00c05df2c45fdb30168df151051fb14f5699b2ee026bce88f8130a99872d3792","urls":["bzz-raw://3fef1c2c8129ff1ba0677ca096a8a389f22cff9307abdee58dbed6e7392b7646","dweb:/ipfs/QmQptfpxPVxJLnX1GdtmmP97EJEpp4TytUzaPRjC197RRA"],"license":"MIT"}},"version":1},"id":3}